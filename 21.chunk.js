(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{157:function(n,e,i){"use strict";i.r(e),e.default='# Commands\n\nUse `.commands` to extend the commander.\n\n## registerCommand\n\nRegister new command by using `registerCommand` method.\n\n**`./src/index.ts`**\n\n```typescript\nimport { pri } from "pri"\n\nexport default (instance: typeof pri) => {\n  // Add new command line: pri deploy\n  instance.commands.registerCommand({\n    name: "deploy",\n    description: "desc",\n    action: () => {}\n  })\n}\n```\n\nThen you can use `pri deploy`.\n\n#### name\n\nCommand name, `pri <name>`.\n\n#### description\n\nDescription for command, when excute `pri -h`.\n\n#### action\n\nAction for command, when excute `pri <name>.`\n\n## expandCommand\n\nExpand exist command by using `expandCommand`.\n\n**`./src/index.ts`**\n\n```typescript\nimport { pri } from "pri"\n\nexport default (instance: typeof pri) => {\n  // Run extra code between pri init\n  instance.commands.expandCommand({\n    name: "init",\n    beforeAction: (...args: any[]) => {}\n    afterAction: (...args: any[]) => {}\n  })\n}\n```\n\n#### name\n\nExist command name, `pri <name>`.\n\n#### beforeAction\n\nAction before `pri <name>`.\n\n#### afterAction\n\nAction after `pri <name>`.\n'}}]);