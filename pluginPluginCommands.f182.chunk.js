(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{180:function(n,s){n.exports='\n                  <div class="markdown-body">\n                    <h1>Commands</h1>\n<p>Use <code>.commands</code> to extend the commander.</p>\n<h2>registerCommand</h2>\n<p>Register new command by using <code>registerCommand</code> method.</p>\n<p><strong><code>./src/index.tsx</code></strong></p>\n<pre><code class="language-typescript"><span class="hljs-keyword">import</span> { pri } <span class="hljs-keyword">from</span> <span class="hljs-string">\'pri\'</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (instance: <span class="hljs-keyword">typeof</span> pri) =&gt; {\n  <span class="hljs-comment">// Add new commander: pri deploy</span>\n  instance.commands.registerCommand({\n    <span class="hljs-attr">name</span>: <span class="hljs-string">\'deploy\'</span>,\n    <span class="hljs-attr">description</span>: <span class="hljs-string">\'desc\'</span>,\n    <span class="hljs-attr">options</span>:[[<span class="hljs-string">\'-d\'</span>, <span class="hljs-string">\'--debug\'</span>, <span class="hljs-string">\'deploy debug\'</span>]]\n    action: <span class="hljs-keyword">async</span> () =&gt; {}\n  });\n};\n</code></pre>\n<p>Then you can use <code>pri deploy</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>Command name, <code>pri &lt;name&gt;</code>.</td>\n</tr>\n<tr>\n<td>description</td>\n<td>Description for command, when excute <code>pri -h</code>.</td>\n</tr>\n<tr>\n<td>options</td>\n<td>Command options</td>\n</tr>\n<tr>\n<td>action</td>\n<td>Action for command, when excute <code>pri &lt;name&gt;.</code></td>\n</tr>\n</tbody>\n</table>\n<h2>expandCommand</h2>\n<p>Expand commander which already exist.</p>\n<p><strong><code>./src/index.tsx</code></strong></p>\n<pre><code class="language-typescript"><span class="hljs-keyword">import</span> { pri } <span class="hljs-keyword">from</span> <span class="hljs-string">"pri"</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (instance: <span class="hljs-keyword">typeof</span> pri) =&gt; {\n  <span class="hljs-comment">// Run extra code between pri init</span>\n  instance.commands.expandCommand({\n    <span class="hljs-attr">name</span>: <span class="hljs-string">"init"</span>,\n    <span class="hljs-attr">beforeAction</span>: <span class="hljs-keyword">async</span> (...args: any[]) =&gt; {}\n    afterAction: <span class="hljs-keyword">async</span> (...args: any[]) =&gt; {}\n  })\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>Exist command name, <code>pri &lt;name&gt;</code>.</td>\n</tr>\n<tr>\n<td>beforeAction</td>\n<td>Action before <code>pri &lt;name&gt;</code>.</td>\n</tr>\n<tr>\n<td>afterAction</td>\n<td>Action after <code>pri &lt;name&gt;</code>.</td>\n</tr>\n<tr>\n<td>options</td>\n<td>Command options</td>\n</tr>\n</tbody>\n</table>\n\n                  </div>\n              '}}]);