(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{158:function(n,e,t){"use strict";t.r(e),e.default='# Project\n\nUse `.project` to extend project operator.\n\n## onAnalyseProject\n\nEvery time `pri` scan project files.\n\n**`./src/index.ts`**\n\n```typescript\nimport { pri } from "pri"\n\nexport default (instance: typeof pri) => {\n  instance.project.onAnalyseProject((files, env, projectConfig) => {\n    return {\n      myCustomPlugin: {\n        hasComponents: files.some(file => {\n          const relativePath = path.relative(projectRootPath, path.join(file.dir, file.name))\n          if (!relativePath.startsWith("src/components")) {\n            return true\n          }\n          return false\n        })\n      }\n    }\n  })\n}\n```\n\n| Option        | Description                                                                                                          |\n| ------------- | -------------------------------------------------------------------------------------------------------------------- |\n| files         | All project\'s files.                                                                                                 |\n| env           | `"local"` when excute `pri dev`. <br/> `"prod"` when excute like `pri build` and `pri preview` other than `pri dev`. |\n| projectConfig | See [Config](../config).                                                                                             |\n\n### Return value\n\nThe return value from `onAnalyseProject` callback will merge into project analyse info, you can access it from `onCreateEntry`.\n\n## onCreateEntry\n\nEvery time `pri` create entry file.\n'}}]);