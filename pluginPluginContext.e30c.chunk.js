(("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[]).push([[6],{177:function(s,n){s.exports='\n                  <div class="markdown-body">\n                    <h1>Context</h1>\n<p>Using <code>.context</code> can help you share data between plugins.</p>\n<p>For example, <code>pri-plugin-login</code> get user info, and <code>pri-plugin-track</code> want to get it.</p>\n<h2>pipe</h2>\n<p><strong><code>pri-plugin-login/src/plugin/index.ts</code></strong></p>\n<pre><code class="language-typescript"><span class="hljs-keyword">import</span> { pri } <span class="hljs-keyword">from</span> <span class="hljs-string">"pri"</span>\n\n<span class="hljs-keyword">const</span> currentUser = getCurrentUser() <span class="hljs-comment">// You can also cache user information in some files.</span>\n\npri.context.pipe(<span class="hljs-function"><span class="hljs-params">context</span> =&gt;</span> {\n  ...context,\n  currentUser\n})\n</code></pre>\n<h2>get</h2>\n<p><strong><code>pri-plugin-track/src/plugin/index.ts</code></strong></p>\n<pre><code class="language-typescript"><span class="hljs-keyword">import</span> { pri } <span class="hljs-keyword">from</span> <span class="hljs-string">\'pri\'</span>;\n\npri.context.get().currentUser;\n</code></pre>\n<p>Donâ€™t forget to set dependence in <code>pri-plugin-track/src/index.ts</code>:</p>\n<pre><code class="language-typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> config = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> ({\n  <span class="hljs-attr">name</span>: <span class="hljs-string">\'pri-plugin-track\'</span>,\n  <span class="hljs-attr">dependencies</span>: [<span class="hljs-string">\'pri-plugin-login\'</span>]\n});\n</code></pre>\n\n                  </div>\n              '}}]);