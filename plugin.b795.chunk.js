(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{276:function(n,s){n.exports='\n                  <div class="markdown-body">\n                    <h1>Plugin setup</h1>\n<p>Itâ€™s easy to expand the commander, analyse project files, and modifying the generated entry file by plugins.</p>\n<h2>Install</h2>\n<p>First, create an empty folder:</p>\n<pre><code class="language-bash">mkdir <span class="hljs-built_in">test</span>; <span class="hljs-built_in">cd</span> <span class="hljs-built_in">test</span>\nnpm init\nnpm install pri\n</code></pre>\n<p>Then, init the pri plugin:</p>\n<pre><code class="language-bash">npx pri plugin init\n</code></pre>\n<p>No <code>npx</code>? Run <code>./node_modules/.bin/pri plugin init</code></p>\n<h2>Plug-in loading mode</h2>\n<p>All the pri-plugin should be named like <code>pri-plugin-*</code> or <code>@ali/pri-plugin-*</code>, for example:</p>\n<ul>\n<li><code>pri-plugin-test</code></li>\n<li><code>pri-plugin-command-deploy</code></li>\n</ul>\n<p>And when you installed <code>pri</code>, <code>pri-plugin-test</code> at the same time in your project , the plug-in will be automatically loaded when any <code>pri</code> scripts are executed.</p>\n<blockquote>\n<p>You can also install pri-plugins in pri-plugin! This is a way to merge plug-in.</p>\n</blockquote>\n<h2>Debug plug-in</h2>\n<p>Change your npm path from project <code>package.json</code>:</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"dependencies"</span>: {\n    <span class="hljs-attr">"pri"</span>: <span class="hljs-string">"*"</span>,\n    <span class="hljs-attr">"pri-plugin-test"</span>: <span class="hljs-string">"^1.0.0"</span>\n  }\n}\n</code></pre>\n<p>To</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"dependencies"</span>: {\n    <span class="hljs-attr">"pri"</span>: <span class="hljs-string">"*"</span>,\n    <span class="hljs-attr">"pri-plugin-test"</span>: <span class="hljs-string">"file:../pri-plugin-test"</span>\n  }\n}\n</code></pre>\n<p>And run <code>npm start</code> in plugin root.</p>\n\n                  </div>\n              '}}]);