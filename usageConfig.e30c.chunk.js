(("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[]).push([[22],{161:function(e,o){e.exports='\n                  <div class="markdown-body">\n                    <h1>Config</h1>\n<blockquote>\n<p>You can also create config files by <a href="../features/project-dashboard">project dashboard</a> easily!</p>\n</blockquote>\n<pre><code>.\n├── src\n└── priconfig.json      # Config file.\n</code></pre>\n<p>You can create <code>priconfig.json</code> in the root of your project directory.</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"distDir"</span>: <span class="hljs-string">"output"</span>\n}\n</code></pre>\n<h2>Config options &lt;type&gt; &lt;defaultValue&gt;</h2>\n<h3>title <code>string</code> <code>&quot;pri&quot;</code></h3>\n<p>Title for html &lt;title&gt;.</p>\n<h3>devPort <code>number</code> <code>[Auto get free port]</code></h3>\n<p>localhost port when execute <code>npm start</code>. pri will find a free port by default, and for a special case, you can change it to a fixed port:</p>\n<pre><code class="language-js">{\n  <span class="hljs-attr">devPort</span>: <span class="hljs-number">9999</span>;\n}\n</code></pre>\n<h3>outFileName <code>string</code> <code>&quot;index.js&quot;</code></h3>\n<p>Output main file name.</p>\n<h3>outCssFileName <code>string</code> <code>&quot;index.css&quot;</code></h3>\n<p>Output main css file name.</p>\n<h3>cssExtract <code>boolean</code> <code>false</code></h3>\n<p>Extract css code? If set to <code>true</code>, when run <code>npm run build</code>, will generate a <code>css</code> file named <code>outCssFileName</code>.</p>\n<h3>bundleFileName <code>string</code> <code>&quot;bundle.js&quot;</code></h3>\n<p>Rewrite Bundle file name when execute <code>npm run bundle</code>.</p>\n<h3>devUrl <code>string</code> <code>null</code></h3>\n<p>Specify the development url, work both for <code>npm start</code> and <code>npm run preview</code>.</p>\n<p>In most scenes, it should not be configured.</p>\n<blockquote>\n<p>Conflict with <code>devPort</code></p>\n</blockquote>\n<h3>distDir <code>string</code> <code>&quot;dist&quot;</code></h3>\n<p>Dist main file name.</p>\n<blockquote>\n<p>Only take effect on <code>npm run build</code> | <code>pri build</code>.</p>\n</blockquote>\n<h3>publicPath <code>string</code> <code>/</code></h3>\n<p>Assets public path. eg: <code>&quot;https://www.some.com&quot;</code>, <code>&quot;https://www.some.com/somePath&quot;</code>, <code>&quot;/somePath&quot;</code>.</p>\n<ul>\n<li>If not set, result: <code>/&lt;distPath&gt;</code>.</li>\n<li>If set /somePath for example, result: <code>/somePath/&lt;distPath&gt;</code>.</li>\n<li>If set <a href="http://some.com">some.com</a> for example, result: <code>https://www.some.com/&lt;distPath&gt;</code>.</li>\n<li>If set <a href="http://some.com/somePath">some.com/somePath</a> for example, result: <code>https://www.some.com/somePath/&lt;distPath&gt;</code>.</li>\n</ul>\n<blockquote>\n<p>Only take effect on <code>npm run build</code> | <code>pri build</code>.</p>\n</blockquote>\n<h3>baseHref <code>string</code> <code>&quot;/&quot;</code></h3>\n<p>Base href for all pages.</p>\n<p>For example, <code>/admin</code> is the root path after deploy, you should set baseHref to <code>/admin</code>.</p>\n<p>There is no need to modify the code, routing <code>/</code> can automatically maps to <code>/admin</code>.</p>\n<p>Only take effect on <code>npm run build</code> | <code>pri build</code></p>\n<h3>customEnv <code>{ [key: string]: any }</code> <code>undefined</code></h3>\n<p>Custom env. For example:</p>\n<pre><code class="language-json">// priconfig.json\n{\n  "customEnv": {\n    "user": "ascoders"\n  }\n}\n</code></pre>\n<p>Then you can use it in pages:</p>\n<pre><code class="language-typescript"><span class="hljs-comment">// ./pages/index.tsx</span>\n<span class="hljs-keyword">import</span> { env } <span class="hljs-keyword">from</span> <span class="hljs-string">\'pri/client\'</span>;\n<span class="hljs-built_in">console</span>.log(env.get(<span class="hljs-string">\'user\'</span>));\n</code></pre>\n<h3>useHttps <code>boolean</code> <code>true</code></h3>\n<p>Whether use https for dev server and preview server.</p>\n<h3>useServiceWorker <code>boolean</code> <code>false</code></h3>\n<p>Wether use service worker.</p>\n<blockquote>\n<p>Warning: if disable it, mocks, serverRender will become invalid.</p>\n</blockquote>\n<h3>clientServerRender <code>boolean</code> <code>false</code></h3>\n<p><em>Experiment.</em></p>\n<p>Wether enable client server render by service worker.</p>\n<blockquote>\n<p>Warning: depend on service worker, should set useServiceWorker=true first.</p>\n</blockquote>\n<h3>routes <code>IRoute[]</code> <code>[]</code></h3>\n<p>Custom routes. When this configuration exists, it will not parse the <code>pages</code> directory.</p>\n<p>For example:</p>\n<pre><code class="language-json">// priconfig.json\n{\n  "routes": [\n    {\n      "path": "/",\n      "component": "src/pages/home" // direct to ./src/pages/home.tsx or ./src/pages/home/index.tsx\n    },\n    {\n      "path": "/user/:id",\n      "component": "src/page/user-info" // direct to ./src/pages/user-info.tsx or ./src/pages/user-info/index.tsx\n    }\n  ]\n}\n</code></pre>\n<h3>useHashRouter <code>boolean</code> <code>false</code></h3>\n<p>Wether enable hash router.</p>\n<h3>sourceRoot <code>string</code> <code>./</code></h3>\n<p>Specify source file root path, for example <code>sourceRoot=\'app/client\'</code>, will lead to <code>app/client/src</code> and <code>app/client/tests</code>.</p>\n<h3>unexpectedFileCheck <code>boolean</code> <code>true</code></h3>\n<p>Suggestion to open!</p>\n<h3>packageLock <code>boolean</code> <code>false</code></h3>\n<p>Enable package lock. If you don’t want to auto upgrade packages by semver agreement, set <code>packageLock</code> to <code>true</code>.</p>\n<h3>hideSourceCodeForNpm <code>boolean</code> <code>false</code></h3>\n<p>Hide source code when publish npm package. Only take effect on <code>projectType = component</code>.</p>\n<h3>watchNodeModules <code>boolean</code> <code>false</code></h3>\n<p>Wether watch <code>node_modules</code>. If set to <code>true</code>, will slightly affect performance.</p>\n<h3>enableCssModules <code>boolean</code> <code>false</code></h3>\n<p>A <a href="https://github.com/css-modules/css-modules">CSS Module</a> is a CSS file in which all class names and animation names are scoped locally by default.</p>\n\n                  </div>\n              '}}]);