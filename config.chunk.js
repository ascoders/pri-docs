(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{158:function(n,e,t){"use strict";t.r(e),e.default='# Config\n\n> You can also create config files by [project dashboard](../features/project-dashboard) easily!\n\nYou can create these files to config `pri`:\n\n* `./src/config/config.default.ts`.\n* `./src/config/config.local.ts`, enable when exec `npm start`.\n* `./src/config/config.prod.ts`, enable when exec `npm run build`.\n\n`config.local.ts` and `config.prod.ts` have a higher priority than `config.default.ts`\n\n## Example\n\n```typescript\n// ./src/config/config.default.ts\nimport { ProjectConfig } from "pri"\n\nexport default {\n  distDir: "output"\n} as ProjectConfig\n```\n\n## Config options &lt;type&gt; &lt;defaultValue&gt;\n\n### title `string` `"pri"`\n\nTitle for html &lt;title&gt;.\n\n### distDir `string` `"dist"`\n\nDist main file name.\n\n> Only take effect on `npm run build` | `pri build`.\n\n### distFileName `string` `"main"`\n\nDist main file name.\n\n> Only take effect on `npm run build` | `pri build`.\n\n### publicPath `string` `null`\n\nAssets public path. eg: `"//some.com"`, `"//some.com/somePath"`, `"/somePath"`.\n\n* If not set, result: `/<distPath>`.\n* If set /somePath for example, result: `/somePath/<distPath>`.\n* If set some.com for example, result: `//some.com/<distPath>`.\n* If set some.com/somePath for example, result: `//some.com/somePath/<distPath>`.\n\n> Only take effect on `npm run build` | `pri build`.\n\n### baseHref `string` `"/"`\n\nBase href for all pages.\n\nFor example, `/admin` is the root path after deploy, you should set baseHref to `/admin`.\n\nThere is no need to modify the code, routing `/` can automatically maps to `/admin`.\n\nOnly take effect on `npm run build` | `pri build`\n\n### staticBuild `boolean` `false`\n\nGenerate static index file for each route, when building.\n\nUsefal for static service who don\'t serve fallback html, like github-pages.\n\n### customEnv `{ [key: string]: any }` `undefined`\n\nCustom env. For example:\n\n```typescript\n// ./src/config/config.default.ts\nexport default {\n  customEnv: {\n    user: "ascoders"\n  }\n} as ProjectConfig\n```\n\nThen you can use it in pages:\n\n```typescript\n// ./src/pages/index.tsx\nimport { env } from "pri/client"\nconsole.log(env.get("user"))\n```\n\n### useHttps `boolean` `true`\n\nWhether use https for dev server and preview server.\n'}}]);