(("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[]).push([[44],{138:function(s,n){s.exports='\n                  <div class="markdown-body">\n                    <h1>Web Worker</h1>\n<p>Import a file ending with <code>.worker.tsx?</code>, and you can get a <code>Blob URL</code> web worker!</p>\n<pre><code class="language-tsx"><span class="hljs-comment">// test.worker.ts</span>\n<span class="hljs-keyword">const</span> ctx: Worker = self <span class="hljs-keyword">as</span> any;\n\nctx.postMessage({ <span class="hljs-attr">foo</span>: <span class="hljs-string">\'foo\'</span> });\n\nctx.addEventListener(<span class="hljs-string">\'message\'</span>, event =&gt; <span class="hljs-built_in">console</span>.log(event));\n</code></pre>\n<pre><code class="language-tsx"><span class="hljs-comment">// app.tsx</span>\n<span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> TestWorker <span class="hljs-keyword">from</span> <span class="hljs-string">\'./test.worker\'</span>;\n\n<span class="hljs-keyword">const</span> worker: Worker = <span class="hljs-keyword">new</span> TestWorker();\n\nworker.postMessage({ <span class="hljs-attr">a</span>: <span class="hljs-number">1</span> });\n\nworker.addEventListener(<span class="hljs-string">\'message\'</span>, event =&gt; {});\n</code></pre>\n\n                  </div>\n              '}}]);