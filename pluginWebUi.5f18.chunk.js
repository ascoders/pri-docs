(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{173:function(s,n){s.exports='<h1>Web UI</h1>\n<p>You can extend web ui in your plugin.</p>\n<p>First, set your <code>web-entry</code> path in plugin’s <code>package.json</code>:</p>\n<pre><code class="language-json">{\n  <span class="hljs-attr">"pri"</span>: {\n    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"plugin"</span>,\n    <span class="hljs-attr">"web-entry"</span>: <span class="hljs-string">"./built/src/web/index.js"</span>\n  }\n}\n</code></pre>\n<p>Then, create file <code>./src/web/index.tsx</code>:</p>\n<pre><code class="language-tsx"><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">\'react\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">View</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">any</span>, <span class="hljs-title">any</span>&gt; </span>{\n  public render() {\n    <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Test<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;\n  }\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">position</span>: <span class="hljs-string">\'menu\'</span>,\n  <span class="hljs-attr">view</span>: View\n};\n</code></pre>\n<p>Then, you plugin will be loaded into the hole of <code>menu</code>.</p>\n<h2>Debug webui</h2>\n<p>You can debug webui by execute <code>npx pri dev -d</code> in your project!</p>\n<p>Don’t forget to execute <code>npm start</code> in your plugin’s dir.</p>\n<hr>\n<p>TODO.</p>\n'}}]);