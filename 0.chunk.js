(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{133:function(n,e,t){"use strict";t.r(e),e.default='# Config\n\n> You can also create config files by project dashboard easily!\n\nYou can create these files to config `pri`:\n- `./src/config/config.default.ts`.\n- `./src/config/config.local.ts`, enable when exec `npm start`.\n- `./src/config/config.prod.ts`, enable when exec `npm run build`.\n\n`config.local.ts` and `config.prod.ts` have a higher priority than `config.default.ts`\n\n**Example**\n\n```typescript\n// ./src/config/config.default.ts\n\nimport { ProjectConfig } from "pri"\n\nexport default {\n  distDir: "output"\n} as ProjectConfig\n```\n\n**`ProjectConfig` Details**\n\n```typescript\n  export class IProjectConfig {\n  /**\n   * Title for html <title>\n   */\n  public title?: string = "pri"\n  /**\n   * Dist dir path\n   * Only take effect on npm run build | pri build\n   */\n  public distDir?: string = "dist"\n  /**\n   * Dist main file name\n   * Only take effect on npm run build | pri build\n   */\n  public distFileName?: string = "main"\n  /**\n   * Assets public path. eg: some.com, some.com/somePath, /somePath\n   * If not set, result: /<distPath>\n   * If set /somePath for example, result: /somePath/<distPath>\n   * If set some.com for example, result: //some.com/<distPath>\n   * If set some.com/somePath for example, result: //some.com/somePath/<distPath>\n   * Only take effect on npm run build | pri build\n   */\n  public publicPath?: string | null = null\n  /**\n   * Base href for all pages.\n   * For example, /admin is the root path after deploy, you should set baseHref to /admin.\n   * There is no need to modify the code, routing / can automatically maps to /admin.\n   * Only take effect on npm run build | pri build\n   */\n  public baseHref?: string = "/"\n  /**\n   * Generate static index file for each route, when building.\n   * Usefal for static service who don\'t serve fallback html, like github-pages.\n   * Only take effect on npm run build | pri build\n   */\n  public staticBuild = false\n  /**\n   * Custom env\n   */\n  public env?: {\n    [key: string]: any\n  }\n}\n```'}}]);