(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{326:function(e,l,t){"use strict";t.r(l);var n=t(0);l.default=n.createElement("div",{className:"markdown-body"},n.createElement("div",null,n.createElement("h1",null,"Config"),n.createElement("blockquote",null,n.createElement("p",null,"You can also create config files by ",n.createElement("a",{href:"../features/project-dashboard"},"project dashboard")," easily!")),n.createElement("p",null,"You can create ",n.createElement("code",null,"pri.config.ts")," in the root of your project directory."),n.createElement("pre",null,n.createElement("code",{className:"language-typescript"},n.createElement("span",{className:"hljs-keyword"},"import")," ","{"," ProjectConfig ","}"," ",n.createElement("span",{className:"hljs-keyword"},"from")," ",n.createElement("span",{className:"hljs-string"},"'pri/client'"),";","\n","\n",n.createElement("span",{className:"hljs-keyword"},"export")," ",n.createElement("span",{className:"hljs-keyword"},"default")," ","{","\n","  ",n.createElement("span",{className:"hljs-attr"},"distDir"),": ",n.createElement("span",{className:"hljs-string"},"'output'"),"\n","}"," ",n.createElement("span",{className:"hljs-keyword"},"as")," ProjectConfig;","\n")),n.createElement("p",null,"Or use a function:"),n.createElement("pre",null,n.createElement("code",{className:"language-typescript"},n.createElement("span",{className:"hljs-keyword"},"import")," ","{"," ProjectConfig ","}"," ",n.createElement("span",{className:"hljs-keyword"},"from")," ",n.createElement("span",{className:"hljs-string"},"'pri/client'"),";","\n","\n",n.createElement("span",{className:"hljs-keyword"},"export")," ",n.createElement("span",{className:"hljs-keyword"},"default")," isDevelopment => ","{","\n","  ",n.createElement("span",{className:"hljs-keyword"},"return")," ","{","\n","    ",n.createElement("span",{className:"hljs-attr"},"distDir"),": ",n.createElement("span",{className:"hljs-string"},"'output'"),"\n","  ","}"," ",n.createElement("span",{className:"hljs-keyword"},"as")," ProjectConfig;","\n","}",";","\n")),n.createElement("h2",null,"Config options <type> <defaultValue>"),n.createElement("h3",null,"title ",n.createElement("code",null,"string")," ",n.createElement("code",null,'"pri"')),n.createElement("p",null,"Title for html <title>."),n.createElement("h3",null,"devPort ",n.createElement("code",null,"number")," ",n.createElement("code",null,"[Auto get free port]")),n.createElement("p",null,"localhost port when execute ",n.createElement("code",null,"npm start"),". pri will find a free port by default, and for a special case, you can change it to a fixed port:"),n.createElement("pre",null,n.createElement("code",{className:"language-js"},"{","\n","  ",n.createElement("span",{className:"hljs-attr"},"devPort"),": ",n.createElement("span",{className:"hljs-number"},"9999"),";","\n","}","\n")),n.createElement("h3",null,"outFileName ",n.createElement("code",null,"string")," ",n.createElement("code",null,'"main.[hash].js"')),n.createElement("p",null,"Output main file name."),n.createElement("h3",null,"outCssFileName ",n.createElement("code",null,"string")," ",n.createElement("code",null,'"main.[hash].css"')),n.createElement("p",null,"Output main css file name."),n.createElement("h3",null,"devUrl ",n.createElement("code",null,"string")," ",n.createElement("code",null,"null")),n.createElement("p",null,"Specify the development url, work both for ",n.createElement("code",null,"npm start")," and ",n.createElement("code",null,"npm run preview"),"."),n.createElement("p",null,"In most scenes, it should not be configured."),n.createElement("blockquote",null,n.createElement("p",null,"Conflict with ",n.createElement("code",null,"devPort"))),n.createElement("h3",null,"distDir ",n.createElement("code",null,"string")," ",n.createElement("code",null,'"dist"')),n.createElement("p",null,"Dist main file name."),n.createElement("blockquote",null,n.createElement("p",null,"Only take effect on ",n.createElement("code",null,"npm run build")," | ",n.createElement("code",null,"pri build"),".")),n.createElement("h3",null,"publicPath ",n.createElement("code",null,"string")," ",n.createElement("code",null,"/")),n.createElement("p",null,"Assets public path. eg: ",n.createElement("code",null,'"https://www.some.com"'),", ",n.createElement("code",null,'"https://www.some.com/somePath"'),", ",n.createElement("code",null,'"/somePath"'),"."),n.createElement("ul",null,n.createElement("li",null,"If not set, result: ",n.createElement("code",null,"/<distPath>"),"."),n.createElement("li",null,"If set /somePath for example, result: ",n.createElement("code",null,"/somePath/<distPath>"),"."),n.createElement("li",null,"If set ",n.createElement("a",{href:"http://some.com"},"some.com")," for example, result: ",n.createElement("code",null,"https://www.some.com/<distPath>"),"."),n.createElement("li",null,"If set ",n.createElement("a",{href:"http://some.com/somePath"},"some.com/somePath")," for example, result: ",n.createElement("code",null,"https://www.some.com/somePath/<distPath>"),".")),n.createElement("blockquote",null,n.createElement("p",null,"Only take effect on ",n.createElement("code",null,"npm run build")," | ",n.createElement("code",null,"pri build"),".")),n.createElement("h3",null,"baseHref ",n.createElement("code",null,"string")," ",n.createElement("code",null,'"/"')),n.createElement("p",null,"Base href for all pages."),n.createElement("p",null,"For example, ",n.createElement("code",null,"/admin")," is the root path after deploy, you should set baseHref to ",n.createElement("code",null,"/admin"),"."),n.createElement("p",null,"There is no need to modify the code, routing ",n.createElement("code",null,"/")," can automatically maps to ",n.createElement("code",null,"/admin"),"."),n.createElement("p",null,"Only take effect on ",n.createElement("code",null,"npm run build")," | ",n.createElement("code",null,"pri build")),n.createElement("h3",null,"customEnv ",n.createElement("code",null,"{"," [key: string]: any ","}")," ",n.createElement("code",null,"undefined")),n.createElement("p",null,"Custom env. For example:"),n.createElement("pre",null,n.createElement("code",{className:"language-typescript"},n.createElement("span",{className:"hljs-comment"},"// ./config/config.default.ts"),"\n",n.createElement("span",{className:"hljs-keyword"},"export")," ",n.createElement("span",{className:"hljs-keyword"},"default")," ","{","\n","  ",n.createElement("span",{className:"hljs-attr"},"customEnv"),": ","{","\n","    ",n.createElement("span",{className:"hljs-attr"},"user"),": ",n.createElement("span",{className:"hljs-string"},"'ascoders'"),"\n","  ","}","\n","}"," ",n.createElement("span",{className:"hljs-keyword"},"as")," ProjectConfig;","\n")),n.createElement("p",null,"Then you can use it in pages:"),n.createElement("pre",null,n.createElement("code",{className:"language-typescript"},n.createElement("span",{className:"hljs-comment"},"// ./pages/index.tsx"),"\n",n.createElement("span",{className:"hljs-keyword"},"import")," ","{"," env ","}"," ",n.createElement("span",{className:"hljs-keyword"},"from")," ",n.createElement("span",{className:"hljs-string"},"'pri/client'"),";","\n",n.createElement("span",{className:"hljs-built_in"},"console"),".log(env.get(",n.createElement("span",{className:"hljs-string"},"'user'"),"));","\n")),n.createElement("h3",null,"useHttps ",n.createElement("code",null,"boolean")," ",n.createElement("code",null,"true")),n.createElement("p",null,"Whether use https for dev server and preview server."),n.createElement("h3",null,"useServiceWorker ",n.createElement("code",null,"boolean")," ",n.createElement("code",null,"false")),n.createElement("p",null,"Wether use service worker."),n.createElement("blockquote",null,n.createElement("p",null,"Warning: if disable it, mocks, serverRender will become invalid.")),n.createElement("h3",null,"clientServerRender ",n.createElement("code",null,"boolean")," ",n.createElement("code",null,"false")),n.createElement("p",null,n.createElement("em",null,"Experiment.")),n.createElement("p",null,"Wether enable client server render by service worker."),n.createElement("blockquote",null,n.createElement("p",null,"Warning: depend on service worker, should set useServiceWorker=true first."))))}}]);